{
  "name": "taxman",
  "description": "taxman caches values for you",
  "version": "0.1.1",
  "homepage": "https://github.com/marcello3d/node-taxman",
  "repository": {
    "type": "git",
    "url": "git://github.com/marcello3d/node-taxman.git"
  },
  "author": {
    "name": "Marcello BastÃ©a-Forte",
    "email": "marcello@cellosoft.com",
    "url": "http://marcello.cellosoft.com/"
  },
  "main": "taxman.js",
  "keywords": [
    "taxman",
    "cache",
    "future"
  ],
  "dependencies": {},
  "engines": {
    "node": ">=0.4.0"
  },
  "readme": "node-taxman\n===========\nTaxman caches values for you.\n\nIntroduction\n------------\nThis module was inspired by the need for an easy way to asynchronously compute a value once, but use it in multiple\nplaces.\n\nExamples\n--------\n    var taxman = require('taxman')\n    \n    // Create a taxman to compute the value\n    var computation = taxman(function(callback) {\n        console.log(\"Doing lots of hard work...\")\n        var x = 3 * 5\n        callback(null, x)\n    })\n\n    // Get the computation value (this first call will start the computation, synchronously, in this case)\n    computation(function(error, value) {\n        if (error) {\n            console.error(\"1a: computation failed\")\n        } else {\n            console.log(\"1a: success! result = \", value)\n        }\n    })\n\n    // Get the computation value again (retrieves cached value)\n    computation(function(error, value) {\n        if (error) {\n            console.error(\"1b: computation failed\")\n        } else {\n            console.log(\"1b: success! result = \", value)\n        }\n    })\n\n    // Reset the cache\n    computation.reset()\n\n    // Get the computation value (this will re-compute the value)\n    computation(function(error, value) {\n        if (error) {\n            console.error(\"1c: computation failed\")\n        } else {\n            console.log(\"1c: success! result = \", value)\n        }\n    })\n\nOutputs:\n\n    Doing lots of hard work...\n    1a: success! result =  15\n    1b: success! result =  15\n    Doing lots of hard work...\n    1c: success! result =  15\n\n\nSee [test.js][1] for more examples.\n\nLicense\n-------\nTaxman is open source software under the [zlib license][2].\n\n[1]: https://github.com/marcello3d/node-taxman/blob/master/test.js\n[2]: https://github.com/marcello3d/node-taxman/blob/master/LICENSE",
  "_id": "taxman@0.1.1",
  "dist": {
    "shasum": "71996c71d0911f44f0150dc51ac20656b8c329d7"
  },
  "_from": "taxman@0.1.1"
}
